// Generated by CoffeeScript 1.7.1
var boundingBox, brewerBlue, canvasHeight, canvasWidth, drawLineGraph, labelPadding, line, margin, parseDate, svg, xAxis, xScale, yAxis, yScale,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

margin = {
  top: 20,
  bottom: 20,
  left: 20,
  right: 20
};

canvasWidth = 1100 - margin.left - margin.right;

canvasHeight = 600 - margin.top - margin.bottom;

svg = d3.select("#vis").append("svg").attr("width", canvasWidth + margin.left + margin.right).attr("height", canvasHeight + margin.top + margin.top).append("g").attr("transform", "translate(" + margin.left + ", " + margin.top + ")");

boundingBox = {
  x: 100,
  y: 0,
  width: canvasWidth - 100,
  height: canvasHeight - 50
};

labelPadding = 7;

brewerBlue = "#1f78b4";

parseDate = d3.time.format("%m/%Y").parse;

xScale = d3.time.scale().range([0, boundingBox.width]);

yScale = d3.scale.linear().range([boundingBox.height, 0]);

xAxis = d3.svg.axis().scale(xScale).orient("bottom");

yAxis = d3.svg.axis().scale(yScale).orient("left");

line = d3.svg.line().interpolate("linear").x(function(d) {
  return xScale(d.date);
}).y(function(d) {
  return yScale(d.storage);
});

drawLineGraph = function(dataset, dates, storages) {
  var frame, station, values, _results;
  xScale.domain(d3.extent(dates));
  yScale.domain([0, d3.max(storages)]);
  frame = svg.append("g").attr("transform", "translate(" + boundingBox.x + ", " + boundingBox.y + ")");
  frame.append("g").attr("class", "x axis").attr("transform", "translate(0, " + boundingBox.height + ")").call(xAxis);
  frame.append("g").attr("class", "y axis").call(yAxis);
  frame.append("text").attr("class", "x label").attr("text-anchor", "end").attr("x", boundingBox.width).attr("y", boundingBox.height - labelPadding).text("Date");
  frame.append("text").attr("class", "y label").attr("text-anchor", "end").attr("y", labelPadding).attr("dy", ".75em").attr("transform", "rotate(-90)").text("Storage");
  _results = [];
  for (station in dataset) {
    values = dataset[station];
    _results.push(frame.append("path").datum(values).attr("class", "line").attr("d", line).style("stroke", brewerBlue));
  }
  return _results;
};

d3.json("monthly-reservoir-storage.json", function(data) {
  var dataset, date, dates, station, storage, storages, value, values, _i, _j, _len, _len1, _ref;
  dates = [];
  _ref = data.dates;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    date = _ref[_i];
    dates.push(parseDate(date));
  }
  dataset = {};
  storages = [];
  for (station in data) {
    values = data[station];
    if (station !== "dates") {
      dataset[station] = [];
      for (_j = 0, _len1 = values.length; _j < _len1; _j++) {
        value = values[_j];
        storage = value.storage;
        if (storage === "--") {
          continue;
        } else {
          storage = Math.round(+storage);
        }
        date = parseDate(value.date);
        dataset[station].push({
          "date": date,
          "storage": storage
        });
        if (__indexOf.call(storages, storage) < 0) {
          storages.push(storage);
        }
      }
    }
  }
  return drawLineGraph(dataset, dates, storages);
});
